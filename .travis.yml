language: cpp

cache: ccache

notifications:
  email:
    on_success: never
    on_failure: always

matrix:
 include:
  - os: linux
    dist: trusty
    sudo: required
    compiler: gcc
    env:
     - QT_BASE=48
#  - os: linux
#    dist: trusty
#    sudo: required
#    compiler: gcc
#    env:
#     - QT_BASE=55
#  - os: linux
#    dist: trusty
#    sudo: required
#    compiler: gcc
#    env:
#     - QT_BASE=56
#  - os: linux
#    dist: xenial
#    sudo: required
#    compiler: gcc
#    env:
#     - QT_BASE=57
#  - os: linux
#    dist: xenial
#    sudo: required
#    compiler: gcc
#    env:
#     - QT_BASE=58
  - os: linux
    dist: xenial
    sudo: required
    compiler: gcc
    env:
     - QT_BASE=59
  - os: linux
    dist: xenial
    sudo: required
    compiler: gcc
    env:
     - QT_BASE=510
  - os: linux
    dist: xenial
    sudo: required
    compiler: gcc
    env:
     - QT_BASE=511
  - os: linux
    dist: xenial
    sudo: required
    compiler: gcc
    env:
     - QT_BASE=512
  - os: linux
    dist: xenial
    sudo: required
    compiler: gcc
    env:
     - JOB="Ubuntu packaging test"
  - os: linux
    dist: xenial
    sudo: required
    services: docker
    env:
     - DOCKER="fedora_30"
  - os: osx
    compiler: clang
    osx_image: xcode9.4
  - os: windows
    env:
     - JOB="Visual Studio 2017 Build Tools"
     - MSBUILD_PATH="/C/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin"

before_install:
  - if [[ "$QT_BASE" = "48"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt487-trusty -y; fi
  - if [[ "$QT_BASE" = "51"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt511-trusty -y; fi
  - if [[ "$QT_BASE" = "52"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt521-trusty -y; fi
  - if [[ "$QT_BASE" = "53"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt532-trusty -y; fi
  - if [[ "$QT_BASE" = "54"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt542-trusty -y; fi
  - if [[ "$QT_BASE" = "55"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y; fi
  - if [[ "$QT_BASE" = "56"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt563-trusty -y; fi
  - if [[ "$QT_BASE" = "57"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt571-xenial -y; fi
  - if [[ "$QT_BASE" = "58"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt58-xenial  -y; fi
  - if [[ "$QT_BASE" = "59"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt597-xenial -y; fi
  - if [[ "$QT_BASE" = "510" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-xenial -y; fi
  - if [[ "$QT_BASE" = "511" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt-5.11.3-xenial -y; fi
  - if [[ "$QT_BASE" = "512" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt-5.12.3-xenial -y; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
      sudo apt-get update -qq;
    fi

install:
  - if [[ "$QT_BASE" = ""    && "$TRAVIS_OS_NAME" = "linux" && "$DOCKER" = "" ]]; then sudo apt-get install -qq lintian kdelibs5-dev debhelper cmake libosmesa6-dev libtinyxml-dev fakeroot qt5-qmake qtbase5-dev libqt4-opengl-dev libqt5opengl5-dev; fi
  - if [[ "$QT_BASE" = "48"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq opt-qt4-qmake opt-qt4-dev-tools; source /opt/qt-4.8/bin/qt-4.8-env.sh; fi
  - if [[ "$QT_BASE" = "51"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt51base; source /opt/qt51/bin/qt51-env.sh; fi
  - if [[ "$QT_BASE" = "52"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt52base; source /opt/qt52/bin/qt52-env.sh; fi
  - if [[ "$QT_BASE" = "53"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt53base; source /opt/qt53/bin/qt53-env.sh; fi
  - if [[ "$QT_BASE" = "54"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt54base; source /opt/qt54/bin/qt54-env.sh; fi
  - if [[ "$QT_BASE" = "55"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt55base; source /opt/qt55/bin/qt55-env.sh; fi
  - if [[ "$QT_BASE" = "56"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt56base; source /opt/qt56/bin/qt56-env.sh; fi
  - if [[ "$QT_BASE" = "57"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt57base; source /opt/qt57/bin/qt57-env.sh; fi
  - if [[ "$QT_BASE" = "58"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt58base; source /opt/qt58/bin/qt58-env.sh; fi 
  - if [[ "$QT_BASE" = "59"  && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt59base; source /opt/qt59/bin/qt59-env.sh; fi 
  - if [[ "$QT_BASE" = "510" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt510base; source /opt/qt510/bin/qt510-env.sh; fi 
  - if [[ "$QT_BASE" = "511" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt511base; source /opt/qt511/bin/qt511-env.sh; fi
  - if [[ "$QT_BASE" = "512" && "$TRAVIS_OS_NAME" = "linux" ]]; then sudo apt-get install -qq qt512base; source /opt/qt512/bin/qt512-env.sh; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
      sudo apt-get install -qq libglu1-mesa-dev libosmesa6-dev libgl2ps-dev libtinyxml-dev;
      if [[ "$QT_BASE" = "" && "$DOCKER" = "" ]] ; then
        sudo apt-get install -qq extra-cmake-modules libkf5kio-dev libkf5kdelibs4support5-bin || true;
      fi
    fi
  
script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      cd QT;
      if  [ -n "$QT_BASE" ] ; then
        qmake DEFINES+=USE_CPP11 -spec linux-g++-64;
        make;
      else
        if [ "$DOCKER" = "" ] ;then
          ./makedeb;
        fi;
        if [ -n "$DOCKER" ] ;then
          cd docker ;
          docker build -t ldview-$DOCKER -f Dockerfile-$DOCKER . ;
          docker run ldview-$DOCKER ;
        fi;
      fi
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      cd MacOSX/LDView;
      xcodebuild;
    fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      export PATH=$MSBUILD_PATH:$PATH;
      msbuild.exe LDView.vcxproj;
    fi
